include:
  - remote: 'https://gitlab.com/cscs-ci/recipes/-/raw/master/templates/v2/.ci-ext.yml'

stages:
  - build
  - test # test stage is running on a slurm cluster

variables:
  # for CUDA-aware MPI, Sarus requires LD_PRELOAD to be set in order to load
  # the specified cuda libraries from the compute node before all others
  CUDA_LIBS: '/usr/local/cuda/compat/libcuda.so:/usr/local/cuda/lib64/libcudart.so'
  PERSIST_IMAGE_NAME: $CSCS_REGISTRY_PATH/mars_gpu:$CI_COMMIT_SHA
  # MARS_CASE_PATH: '/mars.src/ci/reframe

build-mars-image:
  extends: .container-builder
  stage: build
  before_script:
    - DATA_TAG=`mktemp`
    - sha256sum $DOCKERFILE > $DATA_TAG
    # always use latest branch revision from mars repo
    - git ls-remote $MARS_GIT_URL $MARS_GIT_REFS >> $DATA_TAG
    - DOCKERFILE_TAG=`sha256sum $DATA_TAG | head -c 16`
    - rm -f $DATA_TAG
    - export PERSIST_IMAGE_NAME=$CSCS_REGISTRY_PATH/baseimage/mars_base:$DOCKERFILE_TAG
    - echo "BASE_IMAGE=$PERSIST_IMAGE_NAME" >> build.env
  artifacts:
    reports:
      dotenv: build.env
  variables:
    DOCKERFILE: ci/gitlab/cscs/daint/gpu/docker/Dockerfile
    MARS_GIT_URL: 'https://github.com/dganellari/mars.git'
    MARS_GIT_REFS: 'refs/heads/development'

run-mars-test:
  extends: .container-runner-daint-gpu
  image: $PERSIST_IMAGE_NAME
  variables:
    SLURM_NTASKS: 1
    SLURM_TIMELIMIT: "00:10:00"
    USE_MPI: "YES"
    MPICH_GPU_SUPPORT_ENABLED: "1"
  script:
    # the tests are not installed, so we need to run them from the build directory
    - cd /mars.src/build
    # run all tests
    - env LD_PRELOAD=$CUDA_LIBS ctest -V
